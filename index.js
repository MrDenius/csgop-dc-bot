const { default: Axios } = require("axios");
const { default: parse } = require("node-html-parser");
const { Telegraf } = require("telegraf");
const appSettings = require("./appSettings");
const debugSite = require("./debugSite");
const discountChecker = require("./discountChecker");

const bot = new Telegraf("1476521215:AAE2aoxWACDCJc2Y62ZyjgPjwzJLXyq9JwU"); //—Å—é–¥–∞ –ø–æ–º–µ—â–∞–µ—Ç—Å—è —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–ª botFather

bot.start((ctx) => ctx.reply("Welcome")); //–æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start

// discountChecker.on("default", (pInfo) => {
// 	appSettings.GetAllUsers().forEach((user) => {
// 		bot.telegram.sendMessage(
// 			user.id,
// 			`–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${pInfo.price}\n–°–∫–∏–¥–∫–∞: ${pInfo.discount}`
// 		);
// 	});
// });
discountChecker.on("discount", (pInfo) => {
	appSettings.GetAllUsers().forEach((user) => {
		bot.telegram.sendMessage(
			user.id,
			`–°–ö–ò–î–ö–ê!!!!!\n–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${pInfo.price}\n–°–∫–∏–¥–∫–∞: ${pInfo.discount}`
		);
	});
});

bot.hears("/exit 123456987", (ctx) => {
	ctx.reply("Exit in 5 seconds!");
	setTimeout(() => process.exit(0), 5000);
});

bot.command("debug", (ctx) => {
	let mess = `Up time: ${debugSite.Data.upTimeFormated}\nStatus:\n`;

	discountChecker.GetPriceInfo().then((price) => {
		if (price) {
			mess += "üü¢";
		} else {
			mess += "üî¥";
		}
		mess += " PriceChecker\n";

		ctx.replyWithMarkdown(mess);
	});
});

bot.hears("/status", (ctx) => {
	ctx.reply("Loading...");

	discountChecker.GetPriceInfo().then((res) => {
		let mess = `
–°–∫–∏–¥–∫${res.discount ? "–∞ __*–µ—Å—Ç—å*__" : "–∏ __*–Ω–µ—Ç—É*__"}
–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: __*${res.price}‚ÇΩ*__\n`;

		mess += `–í—ã `;

		mess += appSettings.UserExist(ctx.message)
			? "–ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É"
			: "–æ—Ç–ø–∏—Å–∞–Ω—ã –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏";

		ctx.replyWithMarkdown(mess, { parse_mode: "MarkdownV2" });
	});
});
bot.hears("/call", (ctx) => {
	if (appSettings.UserExist(ctx.message)) {
		appSettings.RemoveUser(ctx.message);
		ctx.reply("–í—ã —É–¥–∞–ª–∏–Ω—ã –∏–∑ —Ä–∞—Å—Å—ã–ª–∫–∏!");
	} else {
		appSettings.AddUser(ctx.message);
		ctx.reply("–í—ã –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã –≤ —Ä–∞—Å—Å—ã–ª–∫—É!");
	}
});

discountChecker.Start();

debugSite.Start(); // –∑–∞–ø—É—Å–∫ –¥–µ–±–∞–≥ —Å–µ—Ä–≤–∞
bot.launch(); // –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞

console.log("BOT STARTED!");
